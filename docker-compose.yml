version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - frontend:/app/dist

  auth:
    container_name: auth
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth_db
    environment:
      MONGO_URL: mongodb://auth_db:27017
      ALLOWED_IP: ${ALLOWED_IP}
      JWT_SECRET: ${JWT_SECRET}
    restart: unless-stopped

  auth_db:
    container_name: auth_db
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - auth_data:/data/db
    restart: unless-stopped

  blog:
    container_name: blog
    build:
      context: ./blog
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - blog_db
    environment:
      JWT_SECRET: ${JWT_SECRET}
      DB_HOST: blog_db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    restart: unless-stopped

  blog_db:
    container_name: blog_db
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./blog/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped

  message:
    container_name: message
    build:
      context: ./message
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - message_db
    environment:
      MONGO_URL: mongodb://message_db:27017
      JWT_SECRET: ${JWT_SECRET}
    restart: unless-stopped

  message_db:
    container_name: message_db
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - message_data:/data/db
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - frontend:/usr/share/nginx/html
    depends_on:
      - frontend
      - message
      - auth
    restart: unless-stopped

volumes:
  frontend:
  auth_data:
  message_data:
